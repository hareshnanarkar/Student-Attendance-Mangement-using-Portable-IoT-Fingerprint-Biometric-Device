/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package student_attendance_admin_application_client;
import EntityPackage.Course;
import java.net.*;
import java.io.*;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.DefaultListModel;
import javax.swing.border.EtchedBorder;
/**
 *
 * @author admin
 */
public class CourseGUI extends javax.swing.JPanel {

    /**
     * Creates new form CourseGUI
     */
    ArrayList<Course> arrCourseList;
    public CourseGUI() {
        initComponents();
        setBorder(BorderFactory.createEtchedBorder(EtchedBorder.RAISED));
        jtxtCourseId.setEditable(false);
        jtxtCourseName.setEditable(false);
        jbtnSave.setEnabled(false);
        jbtnDeleteCancel.setEnabled(false);
        loadCourseList();
    }

    public void loadCourseList()
    {
        try
        {
            Thread t=new Thread(new Runnable() {
                @Override
                public void run() {
                    try{
                        
                        Socket sock=new Socket("127.0.0.1",9898);
                        ObjectInputStream inputFromServer=new ObjectInputStream(sock.getInputStream());
                        ObjectOutputStream outputToServer=new ObjectOutputStream(sock.getOutputStream());
                        outputToServer.writeUTF("LOAD_COURSE_LIST_REQUEST");
                        outputToServer.flush();
                        arrCourseList=(ArrayList<Course>)inputFromServer.readObject();
                        DefaultListModel<String> listModel=new DefaultListModel<>();
                        for(int i=0;i<arrCourseList.size();i++)
                        {
                            listModel.addElement(arrCourseList.get(i).CourseName);
                        }
                        jlistCourse.setModel(listModel);
                    }
                    catch(Exception e)
                    {
                            e.printStackTrace();
                    }
                }
            });
            t.start();
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtxtCourseId = new javax.swing.JTextField();
        jtxtCourseName = new javax.swing.JTextField();
        jbtnCreate = new javax.swing.JButton();
        jbtnDeleteCancel = new javax.swing.JButton();
        jbtnSave = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jlistCourse = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText("Details :");

        jLabel3.setText("Course Id :");

        jLabel4.setText("Course Name :");

        jbtnCreate.setText("Create New Course");
        jbtnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCreateActionPerformed(evt);
            }
        });

        jbtnDeleteCancel.setText("Delete");
        jbtnDeleteCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDeleteCancelActionPerformed(evt);
            }
        });

        jbtnSave.setText("Save Changes");
        jbtnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addComponent(jbtnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(57, 57, 57)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jtxtCourseId, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                                    .addComponent(jtxtCourseName)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addComponent(jbtnDeleteCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(126, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtxtCourseId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtxtCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(61, 61, 61)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnDeleteCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jlistCourse.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jlistCourseValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jlistCourse);

        jLabel1.setText("Add, Remove or Update Course");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCreateActionPerformed
        // TODO add your handling code here:
        jlistCourse.clearSelection();
        jtxtCourseId.setText("");
        jtxtCourseName.setText("");
        jtxtCourseId.setEditable(true);
        jtxtCourseName.setEditable(true);
        jbtnSave.setEnabled(true);
        jbtnDeleteCancel.setEnabled(true);
        jbtnSave.setText("Save");
        jbtnDeleteCancel.setText("Cancel");
    }//GEN-LAST:event_jbtnCreateActionPerformed

    private void jbtnDeleteCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDeleteCancelActionPerformed
        // TODO add your handling code here:

        if(jbtnDeleteCancel.getText().equals("Delete"))
        {
            try
            {
                Thread t=new Thread(new Runnable() {
                    @Override
                    public void run() {
                        try{

                            Socket sock=new Socket("127.0.0.1",9898);
                            ObjectInputStream inputFromServer=new ObjectInputStream(sock.getInputStream());
                            ObjectOutputStream outputToServer=new ObjectOutputStream(sock.getOutputStream());
                            outputToServer.writeUTF("DELETE_COURSE_REQUEST");

                            outputToServer.writeUTF(jtxtCourseId.getText());
                            outputToServer.flush();
                            String result=inputFromServer.readUTF();
                            System.out.println(result);
                            if(result.equals("DELETE_COURSE_SUCCESSFUL"))
                            {
                                loadCourseList();
                            }
                            else
                            {

                            }
                        }
                        catch(Exception e)
                        {
                            e.printStackTrace();
                        }
                    }
                });
                t.start();
            }
            catch(Exception e)
            {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jbtnDeleteCancelActionPerformed

    private void jbtnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSaveActionPerformed
        // TODO add your handling code here:
        if(jbtnSave.getText().equals("Save Changes"))
        {
            try
            {
                Thread t=new Thread(new Runnable() {
                    @Override
                    public void run() {
                        try{

                            Socket sock=new Socket("127.0.0.1",9898);
                            ObjectInputStream inputFromServer=new ObjectInputStream(sock.getInputStream());
                            ObjectOutputStream outputToServer=new ObjectOutputStream(sock.getOutputStream());
                            outputToServer.writeUTF("UPDATE_COURSE_REQUEST");
                            Course course=new Course();
                            course.CourseId=jtxtCourseId.getText();
                            course.CourseName=jtxtCourseName.getText();
                            outputToServer.writeObject(course);
                            outputToServer.flush();
                            String result=inputFromServer.readUTF();
                            System.out.println(result);
                            if(result.equals("UPDATE_COURSE_SUCCESSFUL"))
                            {
                                loadCourseList();
                            }
                            else
                            {

                            }
                        }
                        catch(Exception e)
                        {
                            e.printStackTrace();
                        }
                    }
                });
                t.start();
            }
            catch(Exception e)
            {
                e.printStackTrace();
            }
        }
        else
        {
            try
            {
                Thread t=new Thread(new Runnable() {
                    @Override
                    public void run() {
                        try{

                            Socket sock=new Socket("127.0.0.1",9898);
                            ObjectInputStream inputFromServer=new ObjectInputStream(sock.getInputStream());
                            ObjectOutputStream outputToServer=new ObjectOutputStream(sock.getOutputStream());
                            outputToServer.writeUTF("CREATE_COURSE_REQUEST");
                            Course course=new Course();
                            course.CourseId=jtxtCourseId.getText();
                            course.CourseName=jtxtCourseName.getText();
                            
                            outputToServer.writeObject(course);
                            outputToServer.flush();
                            String result=inputFromServer.readUTF();
                            System.out.println(result);
                            if(result.equals("CREATE_COURSE_SUCCESSFUL"))
                            {
                                
                                loadCourseList();
                            }
                            else
                            {

                            }
                        }
                        catch(Exception e)
                        {
                            e.printStackTrace();
                        }
                    }
                });
                t.start();
            }
            catch(Exception e)
            {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jbtnSaveActionPerformed

    private void jlistCourseValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jlistCourseValueChanged
        // TODO add your handling code here:
        if(jlistCourse.getSelectedIndex()!=-1)
        {
            jtxtCourseId.setText(arrCourseList.get(jlistCourse.getSelectedIndex()).CourseId);
            jtxtCourseName.setText(arrCourseList.get(jlistCourse.getSelectedIndex()).CourseName);
            
            jtxtCourseId.setEditable(false);
            jtxtCourseName.setEditable(true);
            jbtnSave.setEnabled(true);
            jbtnDeleteCancel.setEnabled(true);
            jbtnSave.setText("Save Changes");
            jbtnDeleteCancel.setText("Delete");
        }
    }//GEN-LAST:event_jlistCourseValueChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtnCreate;
    private javax.swing.JButton jbtnDeleteCancel;
    private javax.swing.JButton jbtnSave;
    private javax.swing.JList<String> jlistCourse;
    private javax.swing.JTextField jtxtCourseId;
    private javax.swing.JTextField jtxtCourseName;
    // End of variables declaration//GEN-END:variables
}
